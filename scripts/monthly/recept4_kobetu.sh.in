#!/bin/bash

if test -z "$JMARECEIPT_ENV" ; then
    JMARECEIPT_ENV="@jma-receipt-env@"
fi
if ! test -f "$JMARECEIPT_ENV"; then
    exit 0
fi

. $JMARECEIPT_ENV

#-------------------------------------------#
#    レセ電ファイル作成処理
#        ${1}-${11} 印刷ＤＢ用固定引数
#        ${12}-${13}
#        提出先、連番
#        ${17} レセ電ファイル出力先
#        ${18} JOBID 
#        ${19} SHELLID
#        ${20} エラーファイル名 
#        ${21} ファイル出力先区分
#        ${22} 端末ｉｐアドレス
#        ${23} HOSPNUM
#        ${24} レセプト作成区分
#            1:提出用レセ、2:点検用レセ
#            6:連携基盤用、7:連携基盤用（当日）
#        ${25} 症状詳記作成区分
#            1:作成する
#        ${26} レセ電データ履歴保存設定区分
#            1:履歴保存する
#        ${27} 直接請求する保険者番号
#            99999999:設定なし
#        ${28} レセ電データチェックの有無
#            1:チェックする
#        ${29} 入外区分
#-------------------------------------------#

    rennum=0
##  2HD flesize  
    fixedsize=1441500

##  エラーファイル削除
	echo $#
	echo "echo " ${20}
    if  [ -e ${20} ]; then
        rm ${20}
    fi

    if  [ ${24} -eq '6' ] || [ ${24} -eq '7' ]; then
        LOG_FILE="/var/log/jma-receipt/${23}recept4_kobetu_renkei.log"
    else
        LOG_FILE="/var/log/jma-receipt/${23}recept4_kobetu.log"
    fi

    echo "arg5  = [" ${5} "]"  >$LOG_FILE
    echo "arg12 = [" ${12} "]" >>$LOG_FILE
    echo "arg13 = [" ${13} "]" >>$LOG_FILE
    echo "arg17 = [" ${17} "]" >>$LOG_FILE
    echo "arg18 = [" ${18} "]" >>$LOG_FILE
    echo "arg19 = [" ${19} "]" >>$LOG_FILE
    echo "arg20 = [" ${20} "]" >>$LOG_FILE
    echo "arg21 = [" ${21} "]" >>$LOG_FILE
    echo "arg22 = [" ${22} "]" >>$LOG_FILE
    echo "arg23 = [" ${23} "]" >>$LOG_FILE
    echo "arg24 = [" ${24} "]" >>$LOG_FILE
    echo "arg25 = [" ${25} "]" >>$LOG_FILE
    echo "arg26 = [" ${26} "]" >>$LOG_FILE
    echo "arg27 = [" ${27} "]" >>$LOG_FILE
    echo "arg28 = [" ${28} "]" >>$LOG_FILE
    echo "arg29 = [" ${29} "]" >>$LOG_FILE
    echo "hostname =  ["`hostname`  "]" >>$LOG_FILE

    RECEFILE1="RECEIPTC"
    RECEFILE2="RECEDEN"

    if  [ ${24} -eq '2' ]; then
	RECEFILE1="TENKENRC"
	RECEFILE2="TENKENT"
	echo "file name change!" >>$LOG_FILE
    fi

#   該当ファイル削除
	rm  ${17}${23}${RECEFILE1}*.UKE
	rm  /tmp/${23}${RECEFILE2}*.txt

#   連携基盤ファイル作成
    if  [ ${24} -eq '6' ] || [ ${24} -eq '7' ]; then
        if  [ ${12} -eq '1' ]; then
            if  [ ${29} -eq '1' ]; then
                RECEFILE1="RECEIPTCS3"
                RECEFILE2="RECEDENS2"
                if  [ ${24} -eq '7' ]; then
                    RECEFILE1="RECEIPTCS2"
                fi
            else
                RECEFILE1="RECEIPTCS1"
                RECEFILE2="RECEDENS1"
            fi
        else
            if  [ ${29} -eq '1' ]; then
                RECEFILE1="RECEIPTCK3"
                RECEFILE2="RECEDENK2"
                if  [ ${24} -eq '7' ]; then
                    RECEFILE1="RECEIPTCK2"
                fi
            else 
                RECEFILE1="RECEIPTCK1"
                RECEFILE2="RECEDENK1"
            fi 
        fi
	echo "file name change![" ${RECEFILE1} ${RECEFILE2} "]" >>$LOG_FILE

        $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBM590 -parameter $1,$2,$3,$rennum,$5,$6,$7,$8,$9,${10},${11},${12},${13},${17},${18},${19},${29},${21},$fixedsize,${24},${23},${20} >> $LOG_FILE 2>&1
        if  [ -e ${20} ]; then
            echo "--- BM590 err file exist ---" >> $LOG_FILE 2>&1
            exit 
        fi

        if ! test -d  "${17}"; then
             mkdir ${17}
             RC=$?
             echo "--- mkdir end   ---[" $RC  "]" >>$LOG_FILE
             if  [ $RC -ne '0' ]; then
                 ERRCD='0077'
                 $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${18}${19}'  '${ERRCD},${23} >> $LOG_FILE
                 echo "--- mkdir  err   ---" >>$LOG_FILE
                 exit
             fi
             chmod -R g+r ${17}
             echo "--- mkdir rireki holder ---" >>$LOG_FILE
##      else
##           rm ${17}${RECEFILE1}*.UKE
##           echo "--- rm holder file ---" ${17}${RECEFILE1}*.UKE "]" >>$LOG_FILE
        fi
        echo "--- folder name  [" ${17} "]" >>$LOG_FILE

        echo "--- file name  [" /tmp/${23}${RECEFILE2}${3}.txt "=>" ${17}${RECEFILE1}${3}.UKE "]" >>$LOG_FILE
        nkf -s /tmp/${23}${RECEFILE2}${3}.txt > ${17}${RECEFILE1}${3}.UKE
##      RC=$?
##      echo "--- nkf end   ---[" $RC  "]" >>$LOG_FILE
        chmod -R g+r ${17}${RECEFILE1}${3}.UKE

        $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${18}${19},${23} >> $LOG_FILE
        exit 
    fi     

#   レセ電ファイル作成

    $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBM520 -parameter $1,$2,$3,$rennum,$5,$6,$7,$8,$9,${10},${11},${12},${13},${17},${18},${19},${21},$fixedsize,${24},${23},${20} >> $LOG_FILE 2>&1
    if  [ -e ${20} ]; then
        echo "--- BM520 err file exist ---" >> $LOG_FILE 2>&1
        exit 
    fi

    rennum=1
        
#   症状詳記作成
    if  [ ${25} -eq '1' ]; then
        rennum=$(expr $rennum + 1) 
        $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBM530 -parameter $1,$2,$3,$rennum,$5,$6,$7,$8,$9,${10},${11},${12},${13},${18},${19},${23},${20} >> $LOG_FILE 2>&1
        if  [ -e ${20} ]; then
            echo "--- BM530 err file exist ---" >>$LOG_FILE
            exit 
        fi
   fi     

#   レセ電データチェック
    if  [ ${28} -eq '1' ]; then

        cleanup(){
	    rm -f ${TMPFILEBASE}*
        }

	SHNAME=$(basename $0)
	TMPFILEBASE="/tmp/${23}ORCB44RECEDENCHK"
	ERRFILE="${TMPFILEBASE}${SHNAME%%.sh}.ERR"
	ERRFILE="${ERRFILE// /X}"
	ERRLOG="${TMPFILEBASE}${SHNAME%%.sh}.log"
	INFILE="/tmp/${23}${RECEFILE2}01.txt"
	EUCFILE="${TMPFILEBASE}$(basename ${INFILE}).euc"
	PRM="${23},${EUCFILE},${ERRFILE},${ERRLOG},${24}"

	export  RUBYLIB=$SITESCRIPTSDIR:$PATCHSCRIPTSDIR:$SCRIPTSDIR:$RUBYLIB
	export  APS_EXEC_PATH=$(dirname $0)

	cleanup

	[ -e ${ERRLOG}  ] && rm -f ${ERRLOG}
	[ -e ${INFILE}  ] && nkf -E -e -I ${INFILE} > ${EUCFILE}

	$DBSTUB -dir $LDDIRECTORY -bd orcabt receden_check_start -parameter $PRM 2>  ${ERRLOG}
	if [ -s ${ERRLOG} ]; then
	    cat ${ERRLOG} >> $LOG_FILE
	    ERRCD='0099'
	    $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${18}${19}'  '${ERRCD:${#ERRCD}-4:4},${23} >> $LOG_FILE
	    exit
	fi

        rennum=1
        $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBM560 -parameter $1,$2,$3,$rennum,$5,$6,$7,$8,$9,${10},${11},${12},${24},'1',${18},${19},${27},${ERRFILE},${23},${20} >> $LOG_FILE 2>&1
        if  [ -e ${20} ]; then
            echo "--- BM560 err file exist ---" >>$LOG_FILE
            exit 
        fi
    fi

#   漢字コード変換（ＥＵＣからシフトＪＩＳ）	

	NUM=0
    while [ $NUM -lt 100 ]
    do
        NUM=`expr $NUM + 1`
        FILENUM='0'$NUM
    	    echo "filenum"
            echo  ${FILENUM:${#FILENUM}-2:2}
	    if  test -s "/tmp/${23}${RECEFILE2}${FILENUM:${#FILENUM}-2:2}.txt"; then
    	    echo ${FILENUM:${#FILENUM}-2:2}
	    else
    	    echo ${FILENUM:${#FILENUM}-2:2} "nothing"
		    break
	    fi
	    if  test "${FILENUM:${#FILENUM}-2:2}"	=	"01"; then
		    echo "先頭ファイルの処理(sjis変換)"
		    nkf -s /tmp/${23}${RECEFILE2}${FILENUM:${#FILENUM}-2:2}.txt > ${17}${23}${RECEFILE1}.UKE
#		    RC=$?
#		    echo "--- nkf end   ---[" $RC  "]" >>$LOG_FILE
#		    if  [ $RC -ne '0' ]; then
#			ERRCD='0000'$RC
#			$DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${18}${19}'  '${ERRCD:${#ERRCD}-4:4},${23} >> $LOG_FILE
#			echo "--- nkf err   ---" >>$LOG_FILE
#			exit
#		    fi
	    else
		    echo "２番目以降のファイルの処理(sjis変換)"
		    nkf -s /tmp/${23}${RECEFILE2}${FILENUM:${#FILENUM}-2:2}.txt > ${17}${23}${RECEFILE1}${FILENUM:${#FILENUM}-2:2}.UKE
#		    RC=$?
#		    echo "--- nkf end   ---[" $RC  "]" >>$LOG_FILE
#		    if  [ $RC -ne '0' ]; then
#			ERRCD='0000'$RC
#			$DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${18}${19}'  '${ERRCD:${#ERRCD}-4:4},${23} >> $LOG_FILE
#			echo "--- nkf err   ---" >>$LOG_FILE
#			exit
#		    fi
	    fi
    done

#   先頭ファイルのみ処理 

    if  [ -e ${17}${23}${RECEFILE1}.UKE ]; then
        echo "--- RECEIPTC.UKE exist ---" >>$LOG_FILE
    fi
    FDDHOST=`echo ${22}|tr \[\] "  "`
    echo "FDDHOST = " $FDDHOST
##
		    echo "先頭ファイルの処理(fdw処理)" ${17}${23}${RECEFILE1}.UKE
##    $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${18}${19}
##    exit 
##
    if  [ ${21} -eq '1' ]; then
        echo "--- fdw-> fd start ---" >>$LOG_FILE
	$FDW -host $FDDHOST -command fd-write.sh ${17}${23}${RECEFILE1}.UKE ${RECEFILE1}.UKE
	RC=$?
        echo "--- fdw-> fd end   ---[" $RC  "]" >>$LOG_FILE
	if  [ $RC -ne '0' ]; then
	    ERRCD='0000'$RC
	    $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${18}${19}'  '${ERRCD:${#ERRCD}-4:4},${23} >> $LOG_FILE
        echo "--- fdw-> fd err   ---" >>$LOG_FILE
            exit
	fi
    fi

    if  [ ${21} -eq '2' ]; then
        echo "--- fdw-> mo start ---" >>$LOG_FILE
	$FDW -host $FDDHOST -command mo-write.sh ${17}${23}${RECEFILE1}.UKE ${RECEFILE1}.UKE
	RC=$?
        echo "--- fdw-> mo end   ---[" $RC  "]" >>$LOG_FILE
	if  [ $RC -ne '0' ]; then
	    ERRCD='0000'$RC
	    $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${18}${19}'  '${ERRCD:${#ERRCD}-4:4},${23} >> $LOG_FILE
            echo "--- fdw-> mo err   ---" >>$LOG_FILE
            exit
	fi
    fi

#   履歴保存先のフォルダへファイル作成
    if  [ ${26} -eq '1' ]; then
        if  [ ${21} -eq '3' ]|| [ ${21} -eq '4' ]; then
            if  [ ${12} -eq '1' ]; then
                OUT_FOLDER="${17}${23}_Shaho_${5}/Kobetsu/"
                OUT_FOLDER1="${17}${23}_Shaho_${5}/"
            else
                OUT_FOLDER="${17}${23}_Kokuho_${5}/Kobetsu/"
                OUT_FOLDER1="${17}${23}_Kokuho_${5}/"
            fi
            if ! test -d  "$OUT_FOLDER"; then
                 mkdir -p $OUT_FOLDER
                 RC=$?
                 echo "--- mkdir end   ---[" $RC  "]" >>$LOG_FILE
                 if  [ $RC -ne '0' ]; then
                     ERRCD='0077'
                     $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${18}${19}'  '${ERRCD},${23} >> $LOG_FILE
                     echo "--- mkdir  err   ---" >>$LOG_FILE
                     exit
                 fi
                 chmod -R g+r ${OUT_FOLDER1}
                 echo "--- mkdir rireki holder ---" >>$LOG_FILE
            else
                 rm $OUT_FOLDER/${RECEFILE1}.UKE*
                 echo "--- rm rireki holder file ---" >>$LOG_FILE
            fi
            echo "--- folder name  [" $OUT_FOLDER "]" >>$LOG_FILE
            cp ${17}${23}${RECEFILE1}.UKE ${OUT_FOLDER}${RECEFILE1}.UKE

            NUM=0
            while [ $NUM -lt 100 ]
            do
                NUM=`expr $NUM + 1`
                FILENUM='0'$NUM
                echo "filenum" ${FILENUM:${#FILENUM}-2:2} >>$LOG_FILE
                if  test "${FILENUM:${#FILENUM}-2:2}"	=	"01"; then
		    echo "先頭ファイルの処理(履歴保存)"
                    if  test -e "${17}${23}${RECEFILE1}.UKE"; then
                        cp ${17}${23}${RECEFILE1}.UKE ${OUT_FOLDER}${RECEFILE1}.UKE               
                        chmod -R g+r ${OUT_FOLDER}${RECEFILE1}.UKE
	            else
    	                echo ${17}${23}${RECEFILE1}.UKE "nothing"
		        break
	            fi
                else     
		    echo "２番目以降のファイルの処理(履歴保存)"
	            if  test -e "${17}${23}${RECEFILE1}${FILENUM:${#FILENUM}-2:2}.UKE"; then
                       cp ${17}${23}${RECEFILE1}${FILENUM:${#FILENUM}-2:2}.UKE ${OUT_FOLDER}${RECEFILE1}.UKE_$NUM              
                       chmod -R g+r ${OUT_FOLDER}${RECEFILE1}.UKE_$NUM
                    else
    	                echo ${17}${23}${RECEFILE1}${FILENUM:${#FILENUM}-2:2}.UKE "nothing"
		        break
	            fi
                fi
            done 
        fi
    fi

#   ＣＤ−Ｒ出力のときisoファイル作成
    if  [ ${21} -eq '6' ]; then
        echo "--- iso start ---" >>$LOG_FILE
        DIR=`mktemp -d`
        cp ${17}${23}${RECEFILE1}.UKE ${DIR}/${RECEFILE1}.UKE
        mkisofs --input-charset cp437 -o ${17}${23}${RECEFILE1}.iso ${DIR}/
	RC=$?
        echo "--- iso end   ---[" $RC  "]" >>$LOG_FILE
	if  [ $RC -ne '0' ]; then
	    ERRCD='0000'$RC
	    $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${18}${19}'  '${ERRCD:${#ERRCD}-4:4},${23} >> $LOG_FILE
            echo "--- iso err   ---" >>$LOG_FILE
            exit
	fi
    fi

    $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${18}${19},${23} >> $LOG_FILE

    exit 
