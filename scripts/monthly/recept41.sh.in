#!/bin/bash

if test -z "$JMARECEIPT_ENV" ; then
    JMARECEIPT_ENV="@jma-receipt-env@"
fi
if ! test -f "$JMARECEIPT_ENV"; then
    exit 0
fi

. $JMARECEIPT_ENV

#-------------------------------------------#
#    労災レセ電ファイル作成処理
#        $1-${11} 印刷ＤＢ用固定引数
#        $12 労災指定医療機関
#        $13 レセ電ファイル出力先
#        $14 JOBID 
#        $15 SHELLID
#        $16 エラーファイル名 
#        $17 ファイル出力先区分
#        $18 端末ｉｐアドレス
#        $19 入外区分
#        ${20} HOSPNUM
#        ${21} レセプト作成区分
#            1:提出用レセ、2:点検用レセ
#        ${22} 症状詳記作成区分
#            1:作成する
#        ${23} 光ディスク等送付書作成区分
#            0:作成する
#        ${24} レセ電データ履歴保存設定区分
#            1:履歴保存する
#        ${26} レセ電データチェックの有無
#            1:チェックする
#-------------------------------------------#

    LOG_FILE="/var/log/jma-receipt/${20}recept41.log"

    echo "arg5 =  [" ${5} "]"  >$LOG_FILE
    echo "arg12 = [" ${12} "]" >>$LOG_FILE
    echo "arg13 = [" ${13} "]" >>$LOG_FILE
    echo "arg16 = [" ${16} "]" >>$LOG_FILE
    echo "arg17 = [" ${17} "]" >>$LOG_FILE
    echo "arg18 = [" ${18} "]" >>$LOG_FILE
    echo "arg19 = [" ${19} "]" >>$LOG_FILE
    echo "arg20 = [" ${20} "]" >>$LOG_FILE
    echo "arg21 = [" ${21} "]" >>$LOG_FILE
    echo "arg22 = [" ${22} "]" >>$LOG_FILE
    echo "arg23 = [" ${23} "]" >>$LOG_FILE
    echo "arg24 = [" ${24} "]" >>$LOG_FILE
    echo "arg26 = [" ${26} "]" >>$LOG_FILE
    echo "hostname =  [" `hostname`  "]" >>$LOG_FILE

    rennum=0
##  2HD flesize  
    fixedsize=1441500

##  エラーファイル削除
    echo "errfile = [" ${MCP_TEMPDIR}/${16}  "]" >> $LOG_FILE
    rm  -f ${MCP_TEMPDIR}/${16}

#   一時請求
    RECEFILE1="RREC"
    RECEFILE2="RECEDEN"
#   再請求
    RECEFILE3="RREC"
    RECEFILE4="UKSRECE"

    if  [ ${21} -eq '2' ]; then
	RECEFILE1="TENC"
	RECEFILE2="TENKENT"
	RECEFILE3="TENC"
	RECEFILE4="UKSTENK"
	echo "file name change!" >>$LOG_FILE
    fi

#   該当ファイル削除
    rm  ${13}${20}${RECEFILE1}*.UKE
    rm  ${MCP_TEMPDIR}/${20}${RECEFILE1}*.UKE
    rm  ${MCP_TEMPDIR}/${20}${RECEFILE2}*.txt
    rm  ${13}${20}${RECEFILE3}*.UKS
    rm  ${MCP_TEMPDIR}/${20}${RECEFILE3}*.UKS
    rm  ${MCP_TEMPDIR}/${20}${RECEFILE4}*.txt

    rm -fr "${MCP_TEMPDIR}/${20}Rousai_"*
    rm -fr "${MCP_TEMPDIR}/${20}TRousai_"*


#   レセ電ファイル作成
    $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBM700 -parameter $1,$2,$3,$rennum,$5,$6,$7,$8,$9,${10},${11},${13},${14},${15},${19},${17},$fixedsize,${21},${12},${20},${16} >> $LOG_FILE 2>&1
    if  [ -e ${MCP_TEMPDIR}/${16} ]; then
        echo "--- BM700 err file exist ---" >> $LOG_FILE 2>&1
        exit 
    fi

    rennum=1

#   光ディスク等送付書（提出用レセのときのみ）
    if  [ ${23} -eq '1' ] && [ ${21} -eq '1' ]; then
        rennum=$(expr $rennum + 1) 
        $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBM720 -parameter $1,$2,$3,$rennum,$5,$6,$7,$8,$9,${10},${11},${12},${17},${14},${15},${20},${16} >> $LOG_FILE 2>&1
        if  [ -e ${MCP_TEMPDIR}/${16} ]; then
            echo "--- BM720 err file exist ---" >>$LOG_FILE
            exit 
        fi
    fi

#   一時フォルダ作成
    if  [ ${21} -eq '2' ]; then
        ROUSAI_FOLDER="${20}_TRousai_${5}"
    else
        ROUSAI_FOLDER="${20}_Rousai_${5}"
    fi
    OUT_FOLDER="${MCP_TEMPDIR}/$ROUSAI_FOLDER/"

    echo "--- rm out folder [" ${OUT_FOLDER} "]" >>$LOG_FILE
    rm -fr ${OUT_FOLDER}

    if ( [ ${17} -eq '3' ]|| [ ${17} -eq '4' ] ) && [ ${24} -eq '0' ]; then
        echo "--- not out holder  ---" >>$LOG_FILE
    else
        echo "--- folder name  [" ${OUT_FOLDER} "]" >>$LOG_FILE
        if ! test -d  "$OUT_FOLDER"; then
            mkdir ${OUT_FOLDER}
            RC=$?
            if  [ $RC -ne '0' ]; then
                ERRCD='0077'
                $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${14}${15}'  '${ERRCD},${20} >> $LOG_FILE
                echo "--- mkdir  err   ---" >>$LOG_FILE
                exit
            fi
            chmod -R g+r ${OUT_FOLDER}
            echo "--- mkdir out holder ---" >>$LOG_FILE
        else
            rm ${OUT_FOLDER}*
            echo "--- rm out holder file ---" >>$LOG_FILE
        fi
    fi


#   漢字コード変換
    echo "ファイルの処理(sjis変換)"

    cd ${MCP_TEMPDIR}/

#   一次請求
    all=`ls  ${20}${RECEFILE2}*.txt`
 
    for f in $all ; do
        echo "f= " $f >> $LOG_FILE 2>&1
##      echo "mm = " ${f:9:2} >> $LOG_FILE 2>&1
##      echo "nn = " ${f:11:2} >> $LOG_FILE 2>&1

#       システム管理場所出力（履歴保存を行わない）のとき
        if ( [ ${17} -eq '3' ]|| [ ${17} -eq '4' ] ) && [ ${24} -eq '0' ]; then
            echo ${13}${20}${RECEFILE1}${f:9:2}${f:11:2}.UKE >> $LOG_FILE 2>&1
            nkf -s $f > ${13}${20}${RECEFILE1}${f:9:2}${f:11:2}.UKE
        else
            echo ${OUT_FOLDER}${RECEFILE1}${f:9:2}${f:11:2}.UKE >> $LOG_FILE 2>&1
            nkf -s $f > ${OUT_FOLDER}${RECEFILE1}${f:9:2}${f:11:2}.UKE
        fi
    done

#   再請求
    all=`ls  /tmp/${20}${RECEFILE4}*.txt`
 
    for f in $all ; do
        echo "f= " $f >> $LOG_FILE 2>&1
##      echo "mm = " ${f:9:2} >> $LOG_FILE 2>&1
##      echo "nn = " ${f:11:2} >> $LOG_FILE 2>&1

#       システム管理場所出力（履歴保存を行わない）のとき
        if ( [ ${17} -eq '3' ]|| [ ${17} -eq '4' ] ) && [ ${24} -eq '0' ]; then
            echo ${13}${20}${RECEFILE3}${f:9:2}${f:11:2}.UKS >> $LOG_FILE 2>&1
            nkf -s $f > ${13}${20}${RECEFILE3}${f:9:2}${f:11:2}.UKS
        else
            echo ${OUT_FOLDER}${RECEFILE3}${f:9:2}${f:11:2}.UKS >> $LOG_FILE 2>&1
            nkf -s $f > ${OUT_FOLDER}${RECEFILE3}${f:9:2}${f:11:2}.UKS
        fi
    done

#   レセ電データチェック
    if  [ ${26} -eq '1' ]; then

        cleanup(){
	    rm -f ${TMPFILEBASE}*
        }

	SHNAME=$(basename $0)
	TMPFILEBASE="${MCP_TEMPDIR}/${20}ORCB44RECEDENCHK"
	ERRFILE="${TMPFILEBASE}${SHNAME%%.sh}.ERR"
	ERRFILE="${ERRFILE// /X}"
	ERRLOG="${TMPFILEBASE}${SHNAME%%.sh}.log"

	echo "echo " ${ERRFILE}
        if  [ -e ${ERRFILE} ]; then
            rm ${ERRFILE}
        fi

        if ( [ ${17} -eq '3' ]|| [ ${17} -eq '4' ] ) && [ ${24} -eq '0' ]; then
            cd ${13}
        else 
            cd ${OUT_FOLDER}
        fi

        all=`ls  *${RECEFILE1}*.UK?`

        cleanup

        for f in $all ; do
            echo "check f= " $f >> $LOG_FILE 2>&1

            if ( [ ${17} -eq '3' ]|| [ ${17} -eq '4' ] ) && [ ${24} -eq '0' ]; then
	      INFILE=${13}$f
            else
	      INFILE=${OUT_FOLDER}$f
            fi
            echo "INFILE= " ${INFILE} >> $LOG_FILE 2>&1
	    UTF8FILE="${TMPFILEBASE}$(basename ${f}).euc"

            if  [ ${f: -4} = '.UKE' ]; then
	        SKYKBN="1"
            else
#              再請求
	        SKYKBN="2"
            fi
	    PRM="${20},${f: -12},$(basename ${UTF8FILE}),$(basename ${ERRFILE}),$(basename ${ERRLOG}),${SKYKBN},${21}"

	    export  RUBYLIB=$SITESCRIPTSDIR:$PATCHSCRIPTSDIR:$SCRIPTSDIR:$RUBYLIB
	    export  APS_EXEC_PATH=$(dirname $0)
		export  LDDIRECTORY
		export  MONSQL=$PANDALIB/bin/monsql

	    [ -e ${ERRLOG}  ] && rm -f ${ERRLOG}
	    [ -e ${INFILE}  ] &&  nkf --ic=CP932 --oc=UTF-8 ${INFILE} > ${UTF8FILE}


	    rosai_receden_check.rb "$PRM" 2>  ${ERRLOG}
	    if [ -s ${ERRLOG} ]; then
	        cat ${ERRLOG} >> $LOG_FILE
	        ERRCD='0099'
	        $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${14}${15}'  '${ERRCD:${#ERRCD}-4:4},${20} >> $LOG_FILE
	        exit
	    fi
        done

        rennum=1
        $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBM570 -parameter $1,$2,$3,$rennum,$5,$6,$7,$8,$9,${10},${11},${12},${21},'0',${14},${15},'99999999',$(basename ${ERRFILE}),${20},${16} >> $LOG_FILE 2>&1
        if  [ -e ${MCP_TEMPDIR}/${16} ]; then
            echo "--- BM570 err file exist ---" >>$LOG_FILE
            exit 
        fi
    fi

#   システム管理場所出力のとき
    if  [ ${17} -eq '3' ]|| [ ${17} -eq '4' ]; then
        if  [ ${24} -eq '1' ]; then
#           履歴保存先のフォルダへファイル作成
            RIREKI_FOLDER="${13}$ROUSAI_FOLDER/"
            echo "--- rireki folder name  [" ${RIREKI_FOLDER} "]" >>$LOG_FILE
            if ! test -d  "${RIREKI_FOLDER}"; then
                 mkdir ${RIREKI_FOLDER}
                 RC=$?
                 echo "--- mkdir end   ---[" $RC  "]" >>$LOG_FILE
                 if  [ $RC -ne '0' ]; then
                     ERRCD='0077'
                     $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${14}${15}'  '${ERRCD},${20} >> $LOG_FILE
                     echo "--- mkdir  err   ---" >>$LOG_FILE
                     exit
                 fi
                 chmod -R g+r ${RIREKI_FOLDER}
                 echo "--- mkdir rireki holder ---" >>$LOG_FILE
            else
                 rm ${RIREKI_FOLDER}*
                 echo "--- rm rireki holder file ---" >>$LOG_FILE
            fi
#           一時請求
            cp ${OUT_FOLDER}${RECEFILE1}*.UKE ${RIREKI_FOLDER}
            chmod -R g+r ${RIREKI_FOLDER}${RECEFILE1}*.UKE
#           再請求
            cp ${OUT_FOLDER}${RECEFILE3}*.UKS ${RIREKI_FOLDER}
            chmod -R g+r ${RIREKI_FOLDER}${RECEFILE3}*.UKS
        else
#           履歴保存を行わないとき
            chmod -R g+r ${13}${20}${RECEFILE1}*.UKE
            chmod -R g+r ${13}${20}${RECEFILE3}*.UKS
        fi
    fi

#   クライアント保存
    if  [ ${17} -eq '5' ]; then
        cd  ${MCP_TEMPDIR}/
        echo "--- zip name [" ${ROUSAI_FOLDER}.zip "]" >>$LOG_FILE
        rm  ${ROUSAI_FOLDER}.zip
        zip -r ${ROUSAI_FOLDER}.zip ${ROUSAI_FOLDER}/
	RC=$?
        echo "--- zip end   ---[" $RC  "]" >>$LOG_FILE
	if  [ $RC -ne '0' ]; then
	    ERRCD='0000'$RC
	    $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${14}${15}'  '${ERRCD:${#ERRCD}-4:4},${20} >> $LOG_FILE
            echo "--- zip err   ---" >>$LOG_FILE
            exit
	fi
    fi

#   ＣＤ−Ｒ出力のときisoファイル作成
    if  [ ${17} -eq '6' ]; then
        echo "--- iso start ---" >>$LOG_FILE
        cd  ${MCP_TEMPDIR}/
        echo "--- iso name [" ${MCP_TEMPDIR}/${ROUSAI_FOLDER}.iso "]" >>$LOG_FILE
        mkisofs --input-charset cp437 -l -o ${MCP_TEMPDIR}/${ROUSAI_FOLDER}.iso ${ROUSAI_FOLDER}/
	RC=$?
        echo "--- iso end   ---[" $RC  "]" >>$LOG_FILE
	if  [ $RC -ne '0' ]; then
	    ERRCD='0000'$RC
	    $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${14}${15}'  '${ERRCD:${#ERRCD}-4:4},${20} >> $LOG_FILE
            echo "--- iso err   ---" >>$LOG_FILE
            exit
	fi
    fi

    $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${14}${15},${20} >> $LOG_FILE
    exit 
