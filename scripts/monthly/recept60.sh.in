#!/bin/bash

if test -z "$JMARECEIPT_ENV" ; then
    JMARECEIPT_ENV="@jma-receipt-env@"
fi
if ! test -f "$JMARECEIPT_ENV"; then
    exit 0
fi

. $JMARECEIPT_ENV

#-------------------------------------------#
#        ＣＳＶ＿ＩＮＦＯからのファイル作成
#        ${1} HOSPNUM
#        ${2} SRYYM
#        ${3} SHELLID
#        ${4} SHORI-RENNUM
#        ${5} RENNUM
#        ${6} 保存場所
#        ${7} TO-FOLDER
#        ${8} TO-DATA
#        ${9} 端末ｉｐアドレス
#        ${10} ジョブＩＤ
#        ${11} シェルＩＤ
#        ${12} エラーファイル名 
#        ${13} ファイル出力先
#        ${14} コード区分（1:S-jis 2:EUC 3:UTF-8）
#        ${15} 履歴保存設定区分（出産育児一時金）
#            1:履歴保存する
#        ${16} 提出先（出産育児一時金）
#-------------------------------------------#
#
##      エラーファイル削除
        rm -f ${12}

        LOG_FILE="/var/log/jma-receipt/${1}recept60.log"
        FILE_1="/tmp/"${1}"TIHOUKOUHI01.txt"
        FILE_2=${13}${1}${8}
        FILE_3="/tmp/"${1}${8}

        rm -f $LOG_FILE

        echo "arg1  = [" ${1} "]"   >$LOG_FILE
        echo "arg2  = [" ${2} "]"   >>$LOG_FILE
        echo "arg6  = [" ${6} "]"   >>$LOG_FILE
        echo "arg8  = [" ${8} "]"   >>$LOG_FILE
        echo "arg9  = [" ${9} "]"   >>$LOG_FILE
        echo "arg13 = [" ${13} "]"  >>$LOG_FILE
        echo "arg14 = [" ${14} "]"  >>$LOG_FILE
        echo "arg15 = [" ${15} "]"  >>$LOG_FILE
        echo "arg16 = [" ${16} "]"  >>$LOG_FILE
        echo "hostname =  [" `hostname`  "]" >>$LOG_FILE
        echo "file1= [" $FILE_1 "]"  >> $LOG_FILE
        echo "file2= [" $FILE_2 "]"  >> $LOG_FILE
        echo "file3= [" $FILE_3 "]"  >> $LOG_FILE

#       該当ファイル削除
	rm -f $FILE_2
	rm -f $FILE_1
	rm -f $FILE_3

        $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBM600 -parameter ${1},${2},${3},${4},${5},${8},${10},${11},${12} >> $LOG_FILE 2>&1
        if  [ -e ${12} ]; then
            exit
        fi


#       コード区分によりコード変換

        if   [ ${14} = '1' ]; then
            echo "nkf -s"   >> $LOG_FILE
            if  [ ${6} != '5' ]&& [ ${6} != '6' ]; then
                 nkf -s $FILE_1 > $FILE_2
            else
                 nkf -s $FILE_1 > $FILE_3
            fi
        else
            if   [ ${14} = '3' ]; then
            echo "nkf -w"   >> $LOG_FILE
                if  [ ${6} != '5' ]&& [ ${6} != '6' ]; then
                    nkf -w $FILE_1 > $FILE_2
                else
                    nkf -w $FILE_1 > $FILE_3
                fi
            else
            echo "cp"   >> $LOG_FILE
                if  [ ${6} != '5' ]&& [ ${6} != '6' ]; then
                    cp $FILE_1  $FILE_2
                else
                    cp $FILE_1  $FILE_3
               fi
            fi
        fi
         
#
        FDDHOST=`echo ${9}|tr \[\] "  "`
        if  [ ${6} -eq '1' ]; then
            echo "--- fdw-> fd start ---" >>$LOG_FILE
            $FDW -host $FDDHOST -command fd-write.sh $FILE_2 ${8}
            RC=$?
            echo "--- fdw-> fd end   ---[" $RC  "]" >>$LOG_FILE
            if  [ $RC -ne '0' ]; then
                ERRCD='0000'$RC
                $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${10}${11}'  '${ERRCD:${#ERRCD}-4:4},${1} >> $LOG_FILE 2>&1
                echo "--- fdw-> fd err   ---" >>$LOG_FILE
                exit
	    fi
        fi

        if  [ ${6} -eq '2' ]; then
            echo "--- fdw-> mo start ---" >>$LOG_FILE
            $FDW -host $FDDHOST -command mo-write.sh $FILE_2 ${8}
            RC=$?
            echo "--- fdw-> mo end   ---[" $RC  "]" >>$LOG_FILE
            if  [ $RC -ne '0' ]; then
                ERRCD='0000'$RC
                $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${10}${11}'  '${ERRCD:${#ERRCD}-4:4},${1} >> $LOG_FILE 2>&1
                echo "--- fdw-> mo err   ---" >>$LOG_FILE
                exit
            fi
        fi         

        if  [ ${6} -eq '3' ]|| [ ${6} -eq '4' ]; then
#           履歴保存先のフォルダへファイル作成
            if  [ ${15} -eq '1' ]; then
                if  [ ${16} -eq '1' ]; then
                    OUT_FOLDER="${13}${1}_Shaho_${2}/"
                else
                    OUT_FOLDER="${13}${1}_Kokuho_${2}/"
                fi
                if ! test -d  "$OUT_FOLDER"; then
                     mkdir $OUT_FOLDER
                     RC=$?
                     echo "--- mkdir end   ---[" $RC  "]" >>$LOG_FILE
                     if  [ $RC -ne '0' ]; then
                         ERRCD='0077'
                         $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${10}${11}'  '${ERRCD},${1} >> $LOG_FILE 2>&1
                         echo "--- mkdir  err   ---" >>$LOG_FILE
                         exit
                     fi
                     chmod -R g+r ${OUT_FOLDER}
                     echo "--- mkdir rireki holder ---" >>$LOG_FILE
                else
                     rm $OUT_FOLDER${8}*
                     echo "--- rm rireki holder file ---" >>$LOG_FILE
                fi
                echo "--- folder name  [" $OUT_FOLDER "]" >>$LOG_FILE
	        echo "ファイルの処理(履歴保存)"
                if  test -e "$FILE_2"; then
                    cp $FILE_2 ${OUT_FOLDER}${8}
                    chmod -R g+r ${OUT_FOLDER}${8}
	        else
    	            echo $FILE_2 "nothing"
	            break
	        fi
            fi
        fi

#       ＣＤ−Ｒ出力のときisoファイル作成
        if  [ ${6} -eq '6' ]; then
            echo "--- iso start ---" >>$LOG_FILE
            DIR=`mktemp -d`
            cp $FILE_3 ${DIR}/${8}
            mkisofs --input-charset cp437 -o $FILE_3.iso ${DIR}/
	    RC=$?
            echo "--- iso end   ---[" $RC  "]" >>$LOG_FILE
	    if  [ $RC -ne '0' ]; then
	        ERRCD='0000'$RC
	        $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${10}${11}'  '${ERRCD:${#ERRCD}-4:4},${1} >> $LOG_FILE 2>&1
                echo "--- iso err   ---" >>$LOG_FILE
                exit
	    fi
        fi
       
        $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBJOB -parameter JBE${10}${11},${1} >> $LOG_FILE 2>&1

        exit 
