#! /bin/bash

####################################################################
# jma-receiptサーバーをソースの位置から起動する
# 開発用 monitor
# monitor.sh [LD名]
#
# 例) 
# $ cd jma-receipt
# $ tools/monitor.sh orca21
####################################################################

# ディレクトリの移動
cd `dirname $0`/..


# 環境変数の取り込み
if test -z "$JMARECEIPT_ENV" ; then
    JMARECEIPT_ENV="@jma-receipt-env@"
fi
if ! test -f "$JMARECEIPT_ENV"; then
    echo "環境設定ファイル $JMARECEIPT_ENV が読めません"
    exit 1
fi

. $JMARECEIPT_ENV


# glserver を起動するか？
Start_GLSERVER=true

# dbredirector を起動するか？
Start_dbredirector=false

# jma-receipt の位置
#ORCA_DIR=prefix

# 起動する LDのリスト(引数により上書きされる)
LD="orca01 orca02 orca03 orca04 orca11 orca12 orca13 orca14 orca18 orca19 orca21 orca22
    orca23 orca24 orca25 orca29 orca31 orca32 orca33 orca34 orca36 orca41 orca42 orca43
    orca44 orca51 orca52 orca71 orca82 orca101 orca102 orca103 orca104 
    orca105 orca106 orca107 orca108 orca109 orca06 orca61 orca07 sessionend  orca08"

# 常に起動するLD
# このLDは引数に関係なく起動される
ALWAYS_LD="orca00"

# aps のポート番号 
# この番号+ LDの数値 (orca101 なら 101) = 9201
# で起動される。
START_PORT=9100

# soチェック
# 起動する時にコンパイル済かチェックする *soファイル
COB_SO=ORCGM00.so

# MCPSUB lib
COB_LIBRARY_PATH=/usr/lib:/usr/lib/panda
# site-libの取り込み
COB_LIBRARY_PATH=$COB_LIBRARY_PATH:"$SITELIBDIR"
# orca lib
COB_LIBRARY_PATH=$COB_LIBRARY_PATH:"$ORCA_DIR"/cobol/common:"$ORCA_DIR"/cobol/orcabt:"$ORCA_DIR"/cobol/claim:"$ORCA_DIR"/cobol/cutils




####################################################################

if test -x /usr/local/panda/bin/aps; then
    PANDA_SERVER_DIR=/usr/local/panda/bin
else
    PANDA_SERVER_DIR=/usr/lib/panda/sbin
fi
APS="$PANDA_SERVER_DIR"/aps
WFC="$PANDA_SERVER_DIR"/wfc
GLSERVER="$PANDA_SERVER_DIR"/glserver
DBREDIRECTOR="$PANDA_SERVER_DIR"/dbredirector

DIRECTORY="$ORCA_DIR"/lddef/directory
LDDEF="$ORCA_DIR"/lddef
SCREEN="$ORCA_DIR"/screen
RECORD="$ORCA_DIR"/record

if test "x"$1 != "x"; then
    LD=$@
fi

####################################################################
if ! test -d $LDDEF ; then
    echo "${LDDEF} ディレクトリがありません"
    exit 1
fi
if ! test -f $DIRECTORY; then
    echo "directory ファイルがありません"
    exit 1
fi
if ! test -d $SCREEN ; then
    echo "${SCREEN} ディレクトリがありません"
    exit 1
fi
if ! test -f `echo ${SCREEN}/*glade|sed -e "s/ .*//g"` ; then
    echo "gladeファイルがありません"
    exit 1
fi
if ! test -d $RECORD ; then
    echo "${RECORD} ディレクトリがありません"
    exit 1
fi
if ! test -d ${ORCA_DIR}/cobol/${ALWAYS_LD}; then
    echo "LD(COBOL) ${ORCA_DIR}/cobol/${ALWAYS_LD} ディレクトリがありません"
    exit 1
fi
if ! test -f ${ORCA_DIR}/cobol/${ALWAYS_LD}/${COB_SO}; then
    echo "${ORCA_DIR}/cobol/${ALWAYS_LD}/${COB_SO} がありません"
    echo "コンパイル前？"
    exit 1
fi

####################################################################

for i in $ALWAYS_LD $LD; do
    COB_LIBRARY_PATH=$COB_LIBRARY_PATH:"$ORCA_DIR"/cobol/"$i"
done
export COB_LIBRARY_PATH
export JMARECEIPT_ENV="$ORCA_DIR"/etc/jma-receipt.env

if test "x"$Start_GLSERVER = "xtrue" || test "x"$Start_dbredirector = "xtrue";
then
    trap "server_exit" 2
    #server end
    server_exit()
    {
	if test ! -z "$glpid"; then
	    killall glserver
	fi
	if test "x"$Start_dbredirector = "xtrue"; then
	    killall dbredirector
	fi
	if test ! -z "$dbrecid"; then
	    kill $dbrecid
	fi
	if test -f $$dbredirector; then
	    rm $$dbredirector
	fi
    	    killall wfc
	exit 0
    }
fi
if test "x"$Start_GLSERVER = "xtrue"; then
    $GLSERVER -api -screen $SCREEN -record $RECORD -cache /tmp/cache/ &
    glpid=$!
fi

if test "x"$Start_dbredirector = "xtrue"; then
    $DBREDIRECTOR -dir $DIRECTORY -record $RECORD log|tee $$dbredirector &
    until [ -s $$dbredirector ]
    do 
	echo "wait..."
	sleep 1
    done
fi

$WFC -dir $DIRECTORY  -base $ORCA_DIR >/dev/null &
	sleep 10

for i in $ALWAYS_LD; do
    LDNUM=`echo $i|sed -e "s/[^0-9]//g"`
    ORCA_PORT=`expr $START_PORT + $LDNUM`
    $APS -nocheck -dir $DIRECTORY -record $RECORD -base $ORCA_DIR $i -port $ORCA_PORT &
done

for i in $LD; do
    $APS -nocheck -dir $DIRECTORY -record $RECORD -base $ORCA_DIR $i  &
done

while :
do 
  read END
  if [ "$END" == "exit" ]; then
    killall wfc
    killall glserver
    break
  fi
done
